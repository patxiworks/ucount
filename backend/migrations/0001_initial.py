# Generated by Django 5.0.3 on 2024-03-25 11:41

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='E1People',
            fields=[
                ('personid', models.AutoField(db_column='PersonID', primary_key=True, serialize=False)),
                ('surname', models.CharField(db_column='Surname', max_length=30)),
                ('firstname', models.CharField(db_column='FirstName', max_length=30, verbose_name='First name')),
                ('othername', models.CharField(blank=True, db_column='OtherName', max_length=30, null=True, verbose_name='Other name(s)')),
                ('dofb', models.DateField(blank=True, db_column='DofB', null=True, verbose_name='Date of birth')),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=20, null=True, verbose_name='Phone number')),
                ('email', models.EmailField(blank=True, db_column='Email', max_length=150, null=True, validators=[django.core.validators.EmailValidator()], verbose_name='Email address')),
                ('status', models.IntegerField(db_column='Status', default=1, editable=False)),
            ],
            options={
                'verbose_name': 'Person',
                'verbose_name_plural': 'Persons',
                'db_table': 'e1_people',
            },
        ),
        migrations.CreateModel(
            name='E2ActivityType',
            fields=[
                ('activitytypeid', models.AutoField(db_column='ActivityTypeID', primary_key=True, serialize=False)),
                ('activitytype', models.CharField(db_column='ActivityType', max_length=15, verbose_name='Type of activity')),
                ('activitytypename', models.CharField(db_column='ActivityTypeName', max_length=100, verbose_name='Name of activity')),
                ('serialnoonreport', models.IntegerField(db_column='SerialNoOnReport')),
            ],
            options={
                'verbose_name': 'Activity Type',
                'verbose_name_plural': 'Activity Types',
                'db_table': 'e2_activity_type',
            },
        ),
        migrations.CreateModel(
            name='E3Categories',
            fields=[
                ('categoryid', models.AutoField(db_column='CategoryID', primary_key=True, serialize=False)),
                ('category', models.CharField(db_column='Category', max_length=6)),
                ('description', models.CharField(blank=True, db_column='CategoryDescription', max_length=50)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'db_table': 'e3_categories',
            },
        ),
        migrations.CreateModel(
            name='E2Activities',
            fields=[
                ('activityid', models.AutoField(db_column='ActivityID', primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, db_column='ActivityDescription', null=True, verbose_name='Description')),
                ('person', models.ForeignKey(db_column='PersonID', default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='backend.e1people', verbose_name='Person in charge')),
                ('activitytype', models.ForeignKey(db_column='ActivityTypeID', default=0, on_delete=django.db.models.deletion.DO_NOTHING, to='backend.e2activitytype', verbose_name='Type of activity')),
            ],
            options={
                'verbose_name': 'Activity',
                'verbose_name_plural': 'Activities',
                'db_table': 'e2_activities',
            },
        ),
        migrations.CreateModel(
            name='E4Groups',
            fields=[
                ('groupid', models.AutoField(db_column='GroupID', primary_key=True, serialize=False)),
                ('group', models.CharField(db_column='Group', max_length=50)),
                ('cel', models.ForeignKey(db_column='cel', default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='cel', to='backend.e1people', verbose_name='Group coordinator')),
                ('egr', models.ForeignKey(db_column='egr', default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='egr', to='backend.e1people', verbose_name='Group head')),
            ],
            options={
                'verbose_name': 'Group',
                'verbose_name_plural': 'Groups',
                'db_table': 'e4_groups',
            },
        ),
        migrations.CreateModel(
            name='R1ActivitiesLog',
            fields=[
                ('activitieslogid', models.AutoField(db_column='ActivitiesLogID', primary_key=True, serialize=False)),
                ('activitydate', models.DateField(db_column='ActivityDate', verbose_name='Date')),
                ('activity', models.ForeignKey(blank=True, db_column='ActivityID', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.e2activities', verbose_name='Activity')),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
                'db_table': 'r1_activities_log',
            },
        ),
        migrations.CreateModel(
            name='R4GroupAssign',
            fields=[
                ('groupassignid', models.AutoField(db_column='GroupAssignID', primary_key=True, serialize=False)),
                ('group', models.ForeignKey(db_column='GroupID', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.e4groups')),
                ('person', models.ForeignKey(db_column='PersonID', default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='backend.e1people')),
            ],
            options={
                'verbose_name': 'Group',
                'db_table': 'r4_group_assign',
            },
        ),
        migrations.CreateModel(
            name='R5AttendedByAssign',
            fields=[
                ('attendedbyassignid', models.AutoField(db_column='AttendedByAssignID', primary_key=True, serialize=False)),
                ('attendedby', models.ForeignKey(db_column='AttendedBy', on_delete=django.db.models.deletion.DO_NOTHING, related_name='attendedby', to='backend.e1people')),
                ('person', models.ForeignKey(db_column='Person', on_delete=django.db.models.deletion.DO_NOTHING, related_name='person', to='backend.e1people')),
            ],
            options={
                'verbose_name': 'Attended by',
                'verbose_name_plural': 'Attended by',
                'db_table': 'r5_attendedby_assign',
            },
        ),
        migrations.CreateModel(
            name='R2Participants',
            fields=[
                ('participantsid', models.AutoField(db_column='ParticipantsID', primary_key=True, serialize=False)),
                ('activitieslogid', models.ForeignKey(db_column='ActivitiesLogID', default=0, on_delete=django.db.models.deletion.DO_NOTHING, to='backend.r1activitieslog', verbose_name='Activity')),
                ('person', models.ForeignKey(db_column='PersonID', on_delete=django.db.models.deletion.DO_NOTHING, to='backend.e1people', verbose_name='Person')),
            ],
            options={
                'verbose_name': 'Participant',
                'verbose_name_plural': 'Participants',
                'db_table': 'r2_participants',
                'unique_together': {('activitieslogid', 'person')},
            },
        ),
        migrations.CreateModel(
            name='R3CategoryAssign',
            fields=[
                ('categoryassignid', models.AutoField(db_column='CategoryAssignID', primary_key=True, serialize=False)),
                ('startdate', models.DateField(db_column='StartDate', verbose_name='Start date')),
                ('enddate', models.DateField(blank=True, db_column='EndDate', editable=False, null=True)),
                ('category', models.ForeignKey(db_column='CategoryID', default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='backend.e3categories')),
                ('person', models.ForeignKey(db_column='PersonID', default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='backend.e1people')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': "Person's categories",
                'db_table': 'r3_category_assign',
                'unique_together': {('person', 'category')},
            },
        ),
    ]
